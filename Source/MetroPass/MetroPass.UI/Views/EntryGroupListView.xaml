<Page
    xmlns:UI="using:Microsoft.Advertising.WinRT.UI" 
    x:Name="pageRoot"
    x:Class="MetroPass.UI.Views.EntryGroupListView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MetroPass.UI"
    xmlns:common="using:MetroPass.UI.Common"
    xmlns:cal="using:Caliburn.Micro"
    xmlns:converters="using:MetroPass.UI.Common.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.BottomAppBar>
        <AppBar VerticalAlignment="Bottom" x:Name="EntryAppBar" IsOpen="{Binding ShowAppBar, Mode=TwoWay}" IsSticky="True" Opened="EntryAppBar_Opened" Closed="EntryAppBar_Closed" cal:Message.Attach="[Event Closed] = [Action DeselectItem]">
            <Grid>
                <StackPanel x:Name="EntryCommands" Orientation="Horizontal" HorizontalAlignment="Left" Grid.Row="0" Visibility="{Binding ShowEntryCommands, Converter={StaticResource BoolVisibilityConverter}}" >
                    <Button x:Name="EditEntry" Loaded="AppBarButton_Loaded" Style="{StaticResource EditAppBarButtonStyle}" AutomationProperties.Name="Edit Password" ToolTipService.ToolTip="Edit Password"></Button>
                    <Button x:Name="DeleteEntry" Loaded="AppBarButton_Loaded" Style="{StaticResource DeleteAppBarButtonStyle}" AutomationProperties.Name="Delete Password" ToolTipService.ToolTip="Delete Password"></Button>
                    <Button x:Name="CopyUsername" Loaded="AppBarButton_Loaded" Style="{StaticResource ContactAppBarButtonStyle}" AutomationProperties.Name="Copy Username" ToolTipService.ToolTip="Copy Username"></Button>
                    <Button x:Name="CopyPassword" Loaded="AppBarButton_Loaded" Style="{StaticResource PermissionsAppBarButtonStyle}" AutomationProperties.Name="Copy Password" ToolTipService.ToolTip="Copy Password"></Button>
                    <Button x:Name="OpenURL" Loaded="AppBarButton_Loaded" Style="{StaticResource WorldAppBarButtonStyle}" AutomationProperties.Name="Open URL" ToolTipService.ToolTip="Open URL"></Button>
                    <Button x:Name="MoveEntry" Style="{StaticResource MoveToFolderAppBarButtonStyle}" AutomationProperties.Name="Move" ToolTipService.ToolTip="Move Password"/>
                </StackPanel>
                <StackPanel x:Name="GroupCommands" Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="0" Visibility="{Binding ShowGroupCommands, Converter={StaticResource BoolVisibilityConverter}}">
                    <Button x:Name="EditGroup" Loaded="AppBarButton_Loaded" Style="{StaticResource EditAppBarButtonStyle}" AutomationProperties.Name="Edit Folder" ToolTipService.ToolTip="Edit Folder"></Button>
                    <Button x:Name="DeleteGroup" Loaded="AppBarButton_Loaded" Style="{StaticResource DeleteAppBarButtonStyle}" AutomationProperties.Name="Delete Folder" ToolTipService.ToolTip="Delete Folder"></Button>
                    <Button x:Name="AddEntry" Loaded="AppBarButton_Loaded" Style="{StaticResource AddAppBarButtonStyle}" AutomationProperties.Name="Add Password" ToolTipService.ToolTip="Add Password"></Button>
                    <Button x:Name="AddGroup" Loaded="AppBarButton_Loaded" Style="{StaticResource AddFolderAppBarButtonStyle}" AutomationProperties.Name="Add Folder" ToolTipService.ToolTip="Add Folder"></Button>
                </StackPanel>
            </Grid>
        </AppBar>
    </Page.BottomAppBar>
    
    <Page.Resources>
        <converters:GridViewGroupHeaderStyleConverter x:Key="GroupHeaderStyleConverter" ViewModel="{Binding ElementName=pageRoot, Path=DataContext}" />
        <common:TypedTemplateSelector x:Key="pwTemplateSelector"
                                 DefaultTemplateKey="Standard250x250ItemTemplate" />
        <DataTemplate x:Key="Type:PwGroup">
            <Grid Height="70" Width="250" Background="{StaticResource MainFolderColor}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Style="{StaticResource IconFontStyle}" Text="&#xE1C1;" />
                <TextBlock Grid.Column="1" Text="{Binding Name}" Style="{StaticResource FolderTitleStyle}" TextWrapping="NoWrap"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="Type:PwEntry" >
            <Grid Height="70" Width="250" Background="{StaticResource MainEntryColor}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Style="{StaticResource IconFontStyle}" Text="&#xE192;" />
                <StackPanel Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10,0,0,0" >
                    <TextBlock Text="{Binding Title}" Style="{StaticResource TitleTextStyle}" TextWrapping="NoWrap"/>
                    <TextBlock Text="{Binding Username}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap"/>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="Type:AdItem">
            <UI:AdControl Grid.Column="2" ApplicationId="f8df6ddc-bc72-41bf-bf1d-676ddf2af726" AdUnitId="10052848" Width="160" Height="600"  Visibility="{Binding ElementName=zoomedInEntries, Path=DataContext.IsAdVisible, Converter={StaticResource BoolVisibilityConverter}}"/>
        </DataTemplate>

        <DataTemplate x:Key="AdHeader">
           
        </DataTemplate>
        <DataTemplate x:Key="GroupHeader">
            <Button Width="250"     cal:Message.Attach="SelectGroup($dataContext)"
                                    AutomationProperties.Name="Group Title"
                                    Style="{StaticResource TextPrimaryButtonStyle}" >
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Name}" Margin="3,-7,10,10" Style="{Binding UUID, Converter={StaticResource GroupHeaderStyleConverter}}" />
                    <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{Binding UUID, Converter={StaticResource GroupHeaderStyleConverter}}" />
                </StackPanel>
            </Button>
        </DataTemplate>
        <CollectionViewSource
            x:Name="groupedItemsViewSource"
            Source="{Binding TopLevelGroups}"
            IsSourceGrouped="true"
            ItemsPath="SubGroupsAndEntries"
           />
        <Style x:Key="SemanticZoomFolderStyle" TargetType="ListViewItem">
        	<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        	<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="TabNavigation" Value="Local"/>
        	<Setter Property="IsHoldingEnabled" Value="True"/>
        	<Setter Property="Margin" Value="0,0,18,2"/>
        	<Setter Property="HorizontalContentAlignment" Value="Left"/>
        	<Setter Property="VerticalContentAlignment" Value="Top"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="ListViewItem">
        				<Border x:Name="OuterContainer">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="PointerOver">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectionBackground">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBorderThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="PointerOverBorder">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="PointerOverBorder">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MainEntryColor}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PointerOverBorder" d:IsOptimized="True"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Pressed">
        								<Storyboard>
        									<PointerDownThemeAnimation TargetName="ContentContainer"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="PointerOverPressed">
        								<Storyboard>
        									<PointerDownThemeAnimation TargetName="ContentContainer"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectionBackground">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBorderThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="PointerOverBorder">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="PointerOverBorder">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MainFolderColor}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDisabledThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="FocusStates">
        							<VisualState x:Name="Focused">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Unfocused"/>
        							<VisualState x:Name="PointerFocused"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="SelectionHintStates">
        							<VisualStateGroup.Transitions>
        								<VisualTransition GeneratedDuration="0:0:0.65" To="NoSelectionHint"/>
        							</VisualStateGroup.Transitions>
        							<VisualState x:Name="VerticalSelectionHint">
        								<Storyboard>
        									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectionBackground" ToVerticalOffset="15"/>
        									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="ContentBorder" ToVerticalOffset="15"/>
        									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedBorder" ToVerticalOffset="15"/>
        									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedCheckMark" ToVerticalOffset="15"/>
        									<DoubleAnimationUsingKeyFrames Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyph">
        										<DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
        										<DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="HorizontalSelectionHint">
        								<Storyboard>
        									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectionBackground" ToVerticalOffset="0"/>
        									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="ContentBorder" ToVerticalOffset="0"/>
        									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedBorder" ToVerticalOffset="0"/>
        									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedCheckMark" ToVerticalOffset="0"/>
        									<DoubleAnimationUsingKeyFrames Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyph">
        										<DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
        										<DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="NoSelectionHint"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="SelectionStates">
        							<VisualState x:Name="Unselecting">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Unselected">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="UnselectedPointerOver">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="UnselectedSwiping">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectingGlyph"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Selecting">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectingGlyph"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Selected">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="SelectedSwiping">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="SelectedUnfocused">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="DragStates">
        							<VisualStateGroup.Transitions>
        								<VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging"/>
        							</VisualStateGroup.Transitions>
        							<VisualState x:Name="NotDragging"/>
        							<VisualState x:Name="Dragging">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InnerDragContent"/>
        									<DragItemThemeAnimation TargetName="InnerDragContent"/>
        									<FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
        									<FadeOutThemeAnimation TargetName="SelectedBorder"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="DraggingTarget">
        								<Storyboard>
        									<DropTargetItemThemeAnimation TargetName="OuterContainer"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="MultipleDraggingPrimary">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayBackground"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayText"/>
        									<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentBorder"/>
        									<FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground"/>
        									<FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
        									<DragItemThemeAnimation TargetName="ContentBorder"/>
        									<FadeOutThemeAnimation TargetName="SelectionBackground"/>
        									<FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
        									<FadeOutThemeAnimation TargetName="SelectedBorder"/>
        									<FadeOutThemeAnimation TargetName="PointerOverBorder"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="MultipleDraggingSecondary">
        								<Storyboard>
        									<FadeOutThemeAnimation TargetName="ContentContainer"/>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="ReorderHintStates">
        							<VisualStateGroup.Transitions>
        								<VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
        							</VisualStateGroup.Transitions>
        							<VisualState x:Name="NoReorderHint"/>
        							<VisualState x:Name="BottomReorderHint">
        								<Storyboard>
        									<DragOverThemeAnimation Direction="Bottom" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="TopReorderHint">
        								<Storyboard>
        									<DragOverThemeAnimation Direction="Top" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="RightReorderHint">
        								<Storyboard>
        									<DragOverThemeAnimation Direction="Right" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="LeftReorderHint">
        								<Storyboard>
        									<DragOverThemeAnimation Direction="Left" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="DataVirtualizationStates">
        							<VisualState x:Name="DataAvailable"/>
        							<VisualState x:Name="DataPlaceholder">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
        										<DiscreteObjectKeyFrame KeyTime="0">
        											<DiscreteObjectKeyFrame.Value>
        												<Visibility>Visible</Visibility>
        											</DiscreteObjectKeyFrame.Value>
        										</DiscreteObjectKeyFrame>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
        										<DiscreteObjectKeyFrame KeyTime="0">
        											<DiscreteObjectKeyFrame.Value>
        												<Visibility>Visible</Visibility>
        											</DiscreteObjectKeyFrame.Value>
        										</DiscreteObjectKeyFrame>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Grid x:Name="ReorderHintContent" Background="Transparent">
        						<Path x:Name="SelectingGlyph" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckSelectingThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,9.5,9.5,0" Opacity="0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
        						<Border x:Name="HintGlyphBorder" HorizontalAlignment="Right" Height="40" Margin="4" Opacity="0" VerticalAlignment="Top" Width="40">
        							<Path x:Name="HintGlyph" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckHintThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,5.5,5.5,0" Opacity="0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
        						</Border>
        						<Border x:Name="ContentContainer" Margin="0,0,0,20">
        							<Grid x:Name="InnerDragContent">
        								<Rectangle x:Name="PointerOverBorder" Fill="{StaticResource ListViewItemPointerOverBackgroundThemeBrush}" IsHitTestVisible="False" Margin="1" Opacity="0"/>
        								<Rectangle x:Name="FocusVisual" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource ListViewItemFocusBorderThemeBrush}" StrokeThickness="2"/>
        								<Rectangle x:Name="SelectionBackground" Fill="{StaticResource ListViewItemSelectedBackgroundThemeBrush}" Margin="4" Opacity="0"/>
        								<Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="4">
        									<Grid>
        										<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        										<TextBlock x:Name="PlaceholderTextBlock" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
        										<Rectangle x:Name="PlaceholderRect" Fill="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" IsHitTestVisible="False" Visibility="Collapsed"/>
        										<Rectangle x:Name="MultiArrangeOverlayBackground" Fill="{StaticResource ListViewItemDragBackgroundThemeBrush}" IsHitTestVisible="False" Opacity="0"/>
        									</Grid>
        								</Border>
        								<Rectangle x:Name="SelectedBorder" IsHitTestVisible="False" Margin="4" Opacity="0" Stroke="{StaticResource ListViewItemSelectedBackgroundThemeBrush}" StrokeThickness="{StaticResource ListViewItemSelectedBorderThemeThickness}"/>
        								<Border x:Name="SelectedCheckMarkOuter" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="4" VerticalAlignment="Top">
        									<Grid x:Name="SelectedCheckMark" Height="40" Opacity="0" Width="40">
        										<Path x:Name="SelectedEarmark" Data="M0,0 L40,0 L40,40 z" Fill="{StaticResource ListViewItemSelectedBackgroundThemeBrush}" Stretch="Fill"/>
        										<Path Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,5.5,5.5,0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
        									</Grid>
        								</Border>
        								<TextBlock x:Name="MultiArrangeOverlayText" Foreground="{StaticResource ListViewItemDragForegroundThemeBrush}" FontSize="26.667" FontFamily="{StaticResource ContentControlThemeFontFamily}" IsHitTestVisible="False" Margin="18,9,0,0" Opacity="0" TextWrapping="Wrap" Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextTrimming="WordEllipsis"/>
        							</Grid>
        						</Border>
        					</Grid>
        				</Border>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    </Page.Resources>
    
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="GoBack" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>
        
        <SemanticZoom x:Name="groupedList" Grid.Row="1">
            <SemanticZoom.ZoomedInView>
                <GridView x:Name="zoomedInEntries" 
                    Padding="116,0,40,46"
                    ItemsPanel="{StaticResource HorizontalItemPanelTemplate}"
                    ItemTemplateSelector="{StaticResource pwTemplateSelector}"
                    ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}" 
                    SelectionMode="Single"   
                    IsItemClickEnabled="False"
                    SelectedItem="{Binding SelectedPasswordItem, Mode=TwoWay}"
                    >
                    <GridView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style x:Name="ABC" TargetType="FrameworkElement">
                                    <Setter Property="Width" Value="Auto"></Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                            <GroupStyle.Panel>
                                <ItemsPanelTemplate>
                                    <VariableSizedWrapGrid Orientation="Vertical" Margin="0,0,40,0"/>
                                </ItemsPanelTemplate>
                            </GroupStyle.Panel>
                            <GroupStyle.HeaderTemplateSelector>
                                <common:EntryGroupListViewHeaderTemplateSelector AdvertTemplate="{StaticResource  ResourceKey=AdHeader}" NormalTemplate="{StaticResource ResourceKey=GroupHeader}"/> 
                            </GroupStyle.HeaderTemplateSelector>
                        </GroupStyle>
                    </GridView.GroupStyle>
                </GridView>
            </SemanticZoom.ZoomedInView>
            <SemanticZoom.ZoomedOutView>
                <ListView x:Name="zoomedOutEntries"
                          Margin="116,0,40,46"
                          ItemsSource="{Binding GroupsOnThisLevel}"
                          VerticalAlignment="Center" ItemContainerStyle="{StaticResource SemanticZoomFolderStyle}"
                          >
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapGrid Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid
                                Width="250" Height="175"
                                VerticalAlignment="Center"
                                IsHitTestVisible="True"
                                cal:Message.Attach="[Event Tapped] = [Action SelectGroup($dataContext)]"
                                >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="25" />
                                    <RowDefinition Height="150" />
                                </Grid.RowDefinitions>
                                <Border
                                    Background="{StaticResource MainFolderColor}"
                                    HorizontalAlignment="Left"
                                    Height="25" Width="100"
                                    CornerRadius="3,3,0,0"
                                    RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <CompositeTransform SkewX="45" TranslateX="37.5"/>
                                    </Border.RenderTransform>
                                </Border>
                                <Border
                                    Background="{StaticResource MainFolderColor}"
                                    HorizontalAlignment="Left"
                                    Height="25" Width="100"
                                    CornerRadius="3,3,0,0"
                                    RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <CompositeTransform SkewX="-45" TranslateX="12.0" />
                                    </Border.RenderTransform>
                                </Border>
                                <Border
                                    Grid.Row="1"
                                    Height="150"
                                    CornerRadius="0,3,3,3"
                                    Background="{StaticResource MainFolderColor}"
                                    >
                                    <Border.RenderTransform>
                                        <TranslateTransform Y="-1" />
                                    </Border.RenderTransform>
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Text="{Binding Name}"
                                                   Style="{StaticResource TitleTextStyle}"
                                                   FontSize="28" Margin="10 20 10 10"
                                                   TextWrapping="NoWrap"
                                                   TextTrimming="WordEllipsis"/>
                                        <TextBlock Style="{StaticResource TitleTextStyle}" FontSize="18" Margin="20 10 10 10">
                                            <TextBlock.Inlines>
                                                <Run Text="{Binding EntryCount}" />
                                                <Run Text=" passwords" />
                                            </TextBlock.Inlines>
                                        </TextBlock>
                                        <TextBlock Style="{StaticResource TitleTextStyle}" FontSize="18" Margin="20 10 10 10">
                                            <TextBlock.Inlines>
                                                <Run Text="{Binding SubGroupCount}" />
                                                <Run Text=" folders" />
                                            </TextBlock.Inlines>
                                        </TextBlock>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </SemanticZoom.ZoomedOutView>
        </SemanticZoom>
        
        <ListView x:Name="snappedList"
                  Grid.Row="1"
                  Padding="50,0,40,46"
                  Margin="0 0 0 100"
                  ItemTemplateSelector="{StaticResource pwTemplateSelector}"
                  ItemsSource="{Binding FlatList}" 
                  SelectionMode="Single"   
                  IsItemClickEnabled="False"
                  SelectedItem="{Binding SelectedPasswordItem, Mode=TwoWay}"
                  Visibility="Collapsed"
        >
            <ListView.HeaderTemplate>
                <DataTemplate>
                    <Button Width="250"
                                    AutomationProperties.Name="Folder Name"                                    
                                    Style="{StaticResource TextPrimaryButtonStyle}" >
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Root.Name}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}" />
                            <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                        </StackPanel>
                    </Button>
                </DataTemplate>
            </ListView.HeaderTemplate>
        </ListView>

        <StackPanel x:Name="GroupNotFoundMessage" Grid.Row="1" Margin="116,0,0,0" Width="700" HorizontalAlignment="Left" Visibility="Collapsed">
            <TextBlock Text="The folder could no longer be found in the database. It may have been deleted. Use the Back button to go back to the previous screen, or use the button below to go back to your home folder."
                       FontSize="24"
                       Style="{StaticResource BasicTextStyle}"
                       TextWrapping="Wrap"/>
            <Button x:Name="GoHome" Style="{StaticResource ActionButton}" Content="Home" Margin="0 25 0 0" />
        </StackPanel>
        
        <!-- Design for semantic zoom view -->
        <!--<Grid
            Margin="270,784,846,-331"
            Grid.Row="1"
            Width="250" Height="175"
            >
            <Grid.RowDefinitions>
                <RowDefinition Height="25" />
                <RowDefinition Height="150" />
            </Grid.RowDefinitions>
            <Border
                Background="{StaticResource MainFolderColor}"
                HorizontalAlignment="Left"
                Height="25" Width="100"
                CornerRadius="3,3,0,0"
                RenderTransformOrigin="0.5,0.5">
                <Border.RenderTransform>
                    <CompositeTransform SkewX="45" TranslateX="37.5"/>
                </Border.RenderTransform>
            </Border>
            <Border
                Background="{StaticResource MainFolderColor}"
                HorizontalAlignment="Left"
                Height="25" Width="100"
                CornerRadius="3,3,0,0"
                RenderTransformOrigin="0.5,0.5">
                <Border.RenderTransform>
                    <CompositeTransform SkewX="-45" TranslateX="12.0" />
                </Border.RenderTransform>
            </Border>
            <Border
                Grid.Row="1"
                Height="150"
                CornerRadius="0,3,3,3"
                Background="{StaticResource MainFolderColor}"
                >
                <Border.RenderTransform>
                    <TranslateTransform Y="-1" />
                </Border.RenderTransform>
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Telerik"
                                Style="{StaticResource TitleTextStyle}"
                                FontSize="28" Margin="10 20 10 10"
                                TextWrapping="NoWrap"
                                TextTrimming="WordEllipsis"/>
                    <TextBlock Style="{StaticResource TitleTextStyle}" FontSize="18" Margin="20 10 10 10">
                        <TextBlock.Inlines>
                            <Run Text="15" />
                            <Run Text=" passwords" />
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock Style="{StaticResource TitleTextStyle}" FontSize="18" Margin="20 10 10 10">
                        <TextBlock.Inlines>
                            <Run Text="5" />
                            <Run Text=" folders" />
                        </TextBlock.Inlines>
                    </TextBlock>
                </StackPanel>
            </Border>
        </Grid>-->
        
        <VisualStateManager.VisualStateGroups>

            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GoBack" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                    </Storyboard>
                </VisualState>

                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GoBack" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GroupCommands" Storyboard.TargetProperty="HorizontalAlignment">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Center"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="EntryCommands" Storyboard.TargetProperty="HorizontalAlignment">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Center"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoveEntry" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="groupedList" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="snappedList" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>

                </VisualState>
                
                <VisualState x:Name="GroupNotFound">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="groupedList" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="snappedList" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GroupNotFoundMessage" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
